// API

plugins {
    id 'com.epages.restdocs-api-spec' version '0.18.4'
}

openapi3 {
    servers = [
            { url = 'http://localhost:8080' },
            { url = 'https://sikdorok.jeffrey-oh.click' }
    ]
    title = "식도록 API 문서"
    description = "Sikdorok API Description"
    version = "1.0.0"
    format = "json"
}

task copyDocument(type: Copy) {
    delete("src/main/resources/static/swagger-ui/openapi3.json") // 기존 OAS 파일 삭제
    from("$buildDir/api-spec/openapi3.json") // 복제할 OAS 파일 지정
    into("$buildDir/resources/main/static/swagger-ui/.") // 타겟 디렉터리로 파일 복제
    dependsOn("openapi3") // openapi3 Task가 먼저 실행되도록 설정
}

bootJar {
    dependsOn copyDocument
}

dependencies {

    implementation project(":domain-core")
    implementation project(":system-core")

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jdbc
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // assert
    testCompileOnly "org.assertj:assertj-core:3.24.2"

    // restdocs
    implementation 'org.springframework.restdocs:spring-restdocs-core:3.0.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.4'

    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // jwt
    implementation 'com.auth0:java-jwt:4.3.0'
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // mysql
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'

    // json
    implementation 'org.json:json:20230227'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // Apache Commons Lang (StringUtils)
    implementation 'org.apache.commons:commons-lang3'

    // apache commons io
    implementation 'commons-io:commons-io:2.11.0'

    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2.1'

    // xml - if ~ else condition
    implementation 'org.codehaus.janino:janino:3.1.9'
    implementation 'org.codehaus.janino:commons-compiler:3.1.9'

    // Oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

}